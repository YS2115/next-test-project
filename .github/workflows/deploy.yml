name: Deploy to Cloud Run

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ vars.PROJECT_ID }}@appspot.gserviceaccount.com

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ vars.REGION }}-docker.pkg.dev

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ vars.REGION }}-docker.pkg.dev/${{ vars.PROJECT_ID }}/nextjs-app/nextjs-app:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.6.0"

      - name: Terraform Init
        working-directory: ./infrastructure
        run: |
          terraform init \
            -backend-config="bucket=tf-state-${{ vars.PROJECT_ID }}" \
            -backend-config="prefix=terraform/state"

      - name: Terraform Format
        working-directory: ./infrastructure
        run: terraform fmt -check

      - name: Terraform Plan
        working-directory: ./infrastructure
        run: |
          terraform plan \
            -var="project_id=${{ vars.PROJECT_ID }}" \
            -var="region=${{ vars.REGION }}" \
            -var="image_tag=${{ github.sha }}"

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        working-directory: ./infrastructure
        run: |
          terraform apply -auto-approve \
            -var="project_id=${{ vars.PROJECT_ID }}" \
            -var="region=${{ vars.REGION }}" \
            -var="image_tag=${{ github.sha }}"

      - name: Display service URL
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        working-directory: ./infrastructure
        run: |
          echo "Service URL: $(terraform output -raw service_url)"
